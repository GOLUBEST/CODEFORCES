#include <bits/stdc++.h>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int t;
    cin >> t;
    while (t--) {
        int n;
        long long k;
        cin >> n >> k;

        vector<array<long long,3>> casinos(n);
        for (int i = 0; i < n; i++) {
            cin >> casinos[i][0] >> casinos[i][1] >> casinos[i][2];
        }
        sort(casinos.begin(), casinos.end(),
             [](auto &a, auto &b){ return a[0] < b[0]; });

        long long cur = k;
        int idx = 0;
        priority_queue<pair<long long,long long>> pq;

        while (true) {
            while (idx < n && casinos[idx][0] <= cur) {
                pq.push({casinos[idx][2], casinos[idx][1]});
                idx++;
            }

            bool improved = false;
            while (!pq.empty()) {
                auto [reali, ri] = pq.top();
                if (ri < cur) {
                    pq.pop();
                    continue;
                }
                if (reali > cur) {
                    cur = reali;
                    improved = true;
                }
                break;
            }

            if (!improved) break;
        }

        cout << cur << "\n";
    }
}
